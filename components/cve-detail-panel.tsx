import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { CriticalityRating } from "@/components/criticality-rating"
import { ExternalLink, FileWarning, Shield } from "lucide-react"
import Link from "next/link"

interface CveDetailPanelProps {
  id: string
  title: string
  description: string
  severity: number
  published: string
  updated: string
  affected: string[]
  references: string[]
}

export function CveDetailPanel({
  id,
  title,
  description,
  severity,
  published,
  updated,
  affected,
  references,
}: CveDetailPanelProps) {
  const getSeverityLabel = (score: number) => {
    if (score >= 9.0) return "Critical"
    if (score >= 7.0) return "High"
    if (score >= 4.0) return "Medium"
    return "Low"
  }

  const getSeverityColor = (score: number) => {
    if (score >= 9.0) return "bg-red-500/20 text-red-400 border-red-500/30"
    if (score >= 7.0) return "bg-orange-500/20 text-orange-400 border-orange-500/30"
    if (score >= 4.0) return "bg-yellow-500/20 text-yellow-400 border-yellow-500/30"
    return "bg-green-500/20 text-green-400 border-green-500/30"
  }

  return (
    <Card className="cyber-card">
      <CardHeader className="pb-2">
        <div className="flex justify-between items-center">
          <Badge className="bg-purple-500/10 border-purple-500/30">
            <FileWarning className="h-3 w-3 mr-1" />
            {id}
          </Badge>
          <Badge variant="outline" className={getSeverityColor(severity)}>
            {getSeverityLabel(severity)} ({severity.toFixed(1)})
          </Badge>
        </div>
        <CardTitle className="text-base mt-2">{title}</CardTitle>
        <CardDescription className="flex items-center gap-2 text-xs">
          <span>Published: {published}</span>
          <span>Updated: {updated}</span>
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4 pb-2">
        <div>
          <h4 className="text-sm font-medium mb-1">Description:</h4>
          <p className="text-sm text-muted-foreground">{description}</p>
        </div>
        <div>
          <h4 className="text-sm font-medium mb-1">Affected Systems:</h4>
          <ul className="text-sm text-muted-foreground space-y-1">
            {affected.map((system, index) => (
              <li key={index} className="flex items-center gap-2">
                <span className="h-1.5 w-1.5 rounded-full bg-purple-500"></span>
                {system}
              </li>
            ))}
          </ul>
        </div>
        <div>
          <h4 className="text-sm font-medium mb-1">Severity Rating:</h4>
          <CriticalityRating value={severity * 10} />
        </div>
        <div>
          <h4 className="text-sm font-medium mb-1">References:</h4>
          <ul className="text-sm text-muted-foreground space-y-1">
            {references.map((ref, index) => (
              <li key={index}>
                <Link href={ref} className="text-purple-400 hover:text-purple-300 flex items-center gap-1">
                  <ExternalLink className="h-3 w-3" />
                  {ref.length > 40 ? ref.substring(0, 40) + "..." : ref}
                </Link>
              </li>
            ))}
          </ul>
        </div>
      </CardContent>
      <CardFooter className="pt-2">
        <Button className="bg-purple-600 hover:bg-purple-700 w-full">
          <Link href={`/mitigation?id=${id}`} className="flex items-center gap-2">
            <Shield className="h-4 w-4" />
            View Mitigation
          </Link>
        </Button>
      </CardFooter>
    </Card>
  )
}
